{"version":3,"sources":["../node_modules/react-bootstrap/esm/Jumbotron.js","views/HomeView.js"],"names":["Jumbotron","React","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","_objectWithoutPropertiesLoose","classes","useBootstrapPrefix","createElement","_extends","classNames","defaultProps","displayName","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","style","backgroundColor","width","margin","boxShadow","marginTop","Button","href","variant","opacity"],"mappings":"wNAQIA,EAAYC,IAAMC,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAEAC,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAWR,EAAKQ,SAChBC,EAAQC,YAA8BV,EAAM,CAAC,KAAM,YAAa,QAAS,aAGzEW,IAAWT,EAAW,IAD1BM,EAAWI,YAAmBJ,EAAU,eACW,EAAMN,EAASM,EAAW,UAAYD,EAAOL,GAChG,OAAoBJ,IAAMe,cAAcR,EAAWS,YAAS,CAC1Db,IAAKA,GACJQ,EAAO,CACRH,UAAWS,IAAWT,EAAWK,SAGrCd,EAAUmB,aArBS,CACjBT,OAAO,GAqBTV,EAAUoB,YAAc,YACTpB,Q,+BC0BAqB,uBAHS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcC,mBAAmBH,MAErCD,EA/CE,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,gBAClB,OACE,kBAAC,EAAD,CACEG,MAAO,CACLC,gBAAiB,0BACjBC,MAAO,QACPC,OAAQ,YACRC,UAAW,sCAGb,8CACA,6HAKEP,GACA,uBAAGG,MAAO,CAAEK,UAAW,SAAvB,gDAIF,uBAAGL,MAAO,CAAEG,OAAQ,WAApB,qBACCN,EACC,kBAACS,EAAA,EAAD,CAAQC,KAAK,YAAYC,QAAQ,UAAUR,MAAO,CAAES,QAAS,QAA7D,eAIA,oCACE,kBAACH,EAAA,EAAD,CAAQC,KAAK,YAAYC,QAAQ,UAAUR,MAAO,CAAES,QAAS,QAA7D,WAGC,KACD,kBAACH,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRR,MAAO,CAAEG,OAAQ,SAAUM,QAAS,QAHtC","file":"static/js/7.4b97c47a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import React from 'react';\nimport '../styles/base.scss';\nimport { Button, Jumbotron } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { authSelectors } from '../redux/auth';\nimport { connect } from 'react-redux';\n\nconst HomeView = ({ isAuthenticated }) => {\n  return (\n    <Jumbotron\n      style={{\n        backgroundColor: 'rgb(255, 255, 255, 0.7)',\n        width: '600px',\n        margin: '50px auto',\n        boxShadow: '0px 0px 23px 4px rgba(0,0,0,0.31)',\n      }}\n    >\n      <h1>Hello, friend!</h1>\n      <p>\n        This is a simple phonebook application created with React, Redux toolkit\n        and React Bootstrap.\n      </p>\n\n      {!isAuthenticated && (\n        <p style={{ marginTop: '20px' }}>\n          Please, Sign Up to have access to phonebook.\n        </p>\n      )}\n      <p style={{ margin: '20px 0' }}>Natalia Kiriunina</p>\n      {isAuthenticated ? (\n        <Button href=\"/contacts\" variant=\"primary\" style={{ opacity: '0.7' }}>\n          My contacts\n        </Button>\n      ) : (\n        <>\n          <Button href=\"/register\" variant=\"primary\" style={{ opacity: '0.7' }}>\n            Sign Up\n          </Button>\n          {'  '}\n          <Button\n            href=\"/login\"\n            variant=\"secondary\"\n            style={{ margin: '0 auto', opacity: '0.7' }}\n          >\n            Log In\n          </Button>\n        </>\n      )}\n    </Jumbotron>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\nexport default connect(mapStateToProps)(HomeView);\n"],"sourceRoot":""}